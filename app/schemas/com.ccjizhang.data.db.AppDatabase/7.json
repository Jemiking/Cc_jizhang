{
  "formatVersion": 1,
  "database": {
    "version": 7,
    "identityHash": "f44cf46f351609fd488ee330a3458b81",
    "entities": [
      {
        "tableName": "transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `amount` REAL NOT NULL, `categoryId` INTEGER, `accountId` INTEGER NOT NULL, `date` INTEGER NOT NULL, `note` TEXT NOT NULL, `isIncome` INTEGER NOT NULL, `location` TEXT NOT NULL, `imageUri` TEXT NOT NULL, `toAccountId` INTEGER, `createdBy` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `isPrivate` INTEGER NOT NULL, FOREIGN KEY(`categoryId`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`accountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`toAccountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isIncome",
            "columnName": "isIncome",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageUri",
            "columnName": "imageUri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "toAccountId",
            "columnName": "toAccountId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdBy",
            "columnName": "createdBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrivate",
            "columnName": "isPrivate",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_transactions_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          },
          {
            "name": "index_transactions_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_accountId` ON `${TABLE_NAME}` (`accountId`)"
          },
          {
            "name": "index_transactions_date",
            "unique": false,
            "columnNames": [
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_date` ON `${TABLE_NAME}` (`date`)"
          },
          {
            "name": "index_transactions_toAccountId",
            "unique": false,
            "columnNames": [
              "toAccountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_toAccountId` ON `${TABLE_NAME}` (`toAccountId`)"
          },
          {
            "name": "index_transactions_isIncome_date",
            "unique": false,
            "columnNames": [
              "isIncome",
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_isIncome_date` ON `${TABLE_NAME}` (`isIncome`, `date`)"
          },
          {
            "name": "index_transactions_accountId_date",
            "unique": false,
            "columnNames": [
              "accountId",
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_accountId_date` ON `${TABLE_NAME}` (`accountId`, `date`)"
          },
          {
            "name": "index_transactions_categoryId_date",
            "unique": false,
            "columnNames": [
              "categoryId",
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_categoryId_date` ON `${TABLE_NAME}` (`categoryId`, `date`)"
          },
          {
            "name": "index_transactions_accountId_isIncome_date",
            "unique": false,
            "columnNames": [
              "accountId",
              "isIncome",
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_accountId_isIncome_date` ON `${TABLE_NAME}` (`accountId`, `isIncome`, `date`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "categories",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "accounts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "toAccountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `type` TEXT NOT NULL, `icon` TEXT NOT NULL, `color` INTEGER NOT NULL, `isCustom` INTEGER NOT NULL, `sortOrder` INTEGER NOT NULL, `parentId` INTEGER, `level` INTEGER NOT NULL, `isIncome` INTEGER NOT NULL, FOREIGN KEY(`parentId`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCustom",
            "columnName": "isCustom",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sortOrder",
            "columnName": "sortOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "level",
            "columnName": "level",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isIncome",
            "columnName": "isIncome",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_categories_parentId",
            "unique": false,
            "columnNames": [
              "parentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_parentId` ON `${TABLE_NAME}` (`parentId`)"
          },
          {
            "name": "index_categories_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_categories_level",
            "unique": false,
            "columnNames": [
              "level"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_level` ON `${TABLE_NAME}` (`level`)"
          },
          {
            "name": "index_categories_isCustom",
            "unique": false,
            "columnNames": [
              "isCustom"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_isCustom` ON `${TABLE_NAME}` (`isCustom`)"
          },
          {
            "name": "index_categories_sortOrder",
            "unique": false,
            "columnNames": [
              "sortOrder"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_sortOrder` ON `${TABLE_NAME}` (`sortOrder`)"
          },
          {
            "name": "index_categories_type_level",
            "unique": false,
            "columnNames": [
              "type",
              "level"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_type_level` ON `${TABLE_NAME}` (`type`, `level`)"
          },
          {
            "name": "index_categories_parentId_level",
            "unique": false,
            "columnNames": [
              "parentId",
              "level"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_categories_parentId_level` ON `${TABLE_NAME}` (`parentId`, `level`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "categories",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "accounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `type` TEXT NOT NULL, `balance` REAL NOT NULL, `currency` TEXT NOT NULL, `exchangeRate` REAL NOT NULL, `color` INTEGER NOT NULL, `icon` TEXT NOT NULL, `isDefault` INTEGER NOT NULL, `includeInTotal` INTEGER NOT NULL, `creditLimit` REAL NOT NULL, `billingDay` INTEGER NOT NULL, `dueDay` INTEGER NOT NULL, `billingCycleType` TEXT NOT NULL, `nextBillingDate` INTEGER, `nextDueDate` INTEGER, `categoryId` INTEGER, `displayOrder` INTEGER NOT NULL, FOREIGN KEY(`categoryId`) REFERENCES `account_categories`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "balance",
            "columnName": "balance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "exchangeRate",
            "columnName": "exchangeRate",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeInTotal",
            "columnName": "includeInTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creditLimit",
            "columnName": "creditLimit",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "billingDay",
            "columnName": "billingDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dueDay",
            "columnName": "dueDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "billingCycleType",
            "columnName": "billingCycleType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "nextBillingDate",
            "columnName": "nextBillingDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextDueDate",
            "columnName": "nextDueDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "displayOrder",
            "columnName": "displayOrder",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_accounts_type",
            "unique": false,
            "columnNames": [
              "type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_type` ON `${TABLE_NAME}` (`type`)"
          },
          {
            "name": "index_accounts_isDefault",
            "unique": false,
            "columnNames": [
              "isDefault"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_isDefault` ON `${TABLE_NAME}` (`isDefault`)"
          },
          {
            "name": "index_accounts_includeInTotal",
            "unique": false,
            "columnNames": [
              "includeInTotal"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_includeInTotal` ON `${TABLE_NAME}` (`includeInTotal`)"
          },
          {
            "name": "index_accounts_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          },
          {
            "name": "index_accounts_displayOrder",
            "unique": false,
            "columnNames": [
              "displayOrder"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_displayOrder` ON `${TABLE_NAME}` (`displayOrder`)"
          },
          {
            "name": "index_accounts_type_isDefault",
            "unique": false,
            "columnNames": [
              "type",
              "isDefault"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_type_isDefault` ON `${TABLE_NAME}` (`type`, `isDefault`)"
          },
          {
            "name": "index_accounts_currency_includeInTotal",
            "unique": false,
            "columnNames": [
              "currency",
              "includeInTotal"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_currency_includeInTotal` ON `${TABLE_NAME}` (`currency`, `includeInTotal`)"
          },
          {
            "name": "index_accounts_categoryId_displayOrder",
            "unique": false,
            "columnNames": [
              "categoryId",
              "displayOrder"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_accounts_categoryId_displayOrder` ON `${TABLE_NAME}` (`categoryId`, `displayOrder`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "account_categories",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "budgets",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `amount` REAL NOT NULL, `startDate` INTEGER NOT NULL, `endDate` INTEGER NOT NULL, `period` TEXT NOT NULL, `categories` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `notifyEnabled` INTEGER NOT NULL, `notifyThreshold` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "period",
            "columnName": "period",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "categories",
            "columnName": "categories",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notifyEnabled",
            "columnName": "notifyEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notifyThreshold",
            "columnName": "notifyThreshold",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "budget_category_relations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`budgetId` INTEGER NOT NULL, `categoryId` INTEGER NOT NULL, PRIMARY KEY(`budgetId`, `categoryId`), FOREIGN KEY(`budgetId`) REFERENCES `budgets`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`categoryId`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "budgetId",
            "columnName": "budgetId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "budgetId",
            "categoryId"
          ]
        },
        "indices": [
          {
            "name": "index_budget_category_relations_budgetId",
            "unique": false,
            "columnNames": [
              "budgetId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_budget_category_relations_budgetId` ON `${TABLE_NAME}` (`budgetId`)"
          },
          {
            "name": "index_budget_category_relations_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_budget_category_relations_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "budgets",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "budgetId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "categories",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "transaction_tags",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`transactionId` INTEGER NOT NULL, `tag` TEXT NOT NULL, PRIMARY KEY(`transactionId`, `tag`))",
        "fields": [
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "transactionId",
            "tag"
          ]
        },
        "indices": [
          {
            "name": "index_transaction_tags_transactionId",
            "unique": false,
            "columnNames": [
              "transactionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transaction_tags_transactionId` ON `${TABLE_NAME}` (`transactionId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "saving_goals",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `targetAmount` REAL NOT NULL, `currentAmount` REAL NOT NULL, `accountId` INTEGER, `startDate` INTEGER NOT NULL, `targetDate` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `iconUri` TEXT, `color` INTEGER NOT NULL, `note` TEXT, `autoSaveAmount` REAL, `autoSaveFrequencyDays` INTEGER, `lastAutoSaveDate` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`accountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAmount",
            "columnName": "targetAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentAmount",
            "columnName": "currentAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "targetDate",
            "columnName": "targetDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "iconUri",
            "columnName": "iconUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "autoSaveAmount",
            "columnName": "autoSaveAmount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "autoSaveFrequencyDays",
            "columnName": "autoSaveFrequencyDays",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastAutoSaveDate",
            "columnName": "lastAutoSaveDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_saving_goals_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_saving_goals_accountId` ON `${TABLE_NAME}` (`accountId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "recurring_transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `type` INTEGER NOT NULL, `amount` REAL NOT NULL, `description` TEXT NOT NULL, `categoryId` INTEGER, `fromAccountId` INTEGER NOT NULL, `toAccountId` INTEGER, `firstExecutionDate` INTEGER NOT NULL, `endDate` INTEGER, `recurrenceType` INTEGER NOT NULL, `customRecurrenceDays` INTEGER, `specificRecurrenceDay` TEXT, `weekdayMask` INTEGER, `lastExecutionDate` INTEGER, `nextExecutionDate` INTEGER NOT NULL, `totalExecutions` INTEGER NOT NULL, `maxExecutions` INTEGER NOT NULL, `status` INTEGER NOT NULL, `note` TEXT, `notifyBeforeExecution` INTEGER NOT NULL, `notifyDaysBefore` INTEGER, `templateDataJson` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `accountName` TEXT NOT NULL, `categoryName` TEXT NOT NULL, `formattedRecurrencePattern` TEXT NOT NULL, FOREIGN KEY(`categoryId`) REFERENCES `categories`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`fromAccountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`toAccountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "fromAccountId",
            "columnName": "fromAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toAccountId",
            "columnName": "toAccountId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "firstExecutionDate",
            "columnName": "firstExecutionDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "recurrenceType",
            "columnName": "recurrenceType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customRecurrenceDays",
            "columnName": "customRecurrenceDays",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "specificRecurrenceDay",
            "columnName": "specificRecurrenceDay",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "weekdayMask",
            "columnName": "weekdayMask",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastExecutionDate",
            "columnName": "lastExecutionDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextExecutionDate",
            "columnName": "nextExecutionDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalExecutions",
            "columnName": "totalExecutions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxExecutions",
            "columnName": "maxExecutions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notifyBeforeExecution",
            "columnName": "notifyBeforeExecution",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notifyDaysBefore",
            "columnName": "notifyDaysBefore",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "templateDataJson",
            "columnName": "templateDataJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountName",
            "columnName": "accountName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "categoryName",
            "columnName": "categoryName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "formattedRecurrencePattern",
            "columnName": "formattedRecurrencePattern",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_recurring_transactions_categoryId",
            "unique": false,
            "columnNames": [
              "categoryId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_recurring_transactions_categoryId` ON `${TABLE_NAME}` (`categoryId`)"
          },
          {
            "name": "index_recurring_transactions_fromAccountId",
            "unique": false,
            "columnNames": [
              "fromAccountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_recurring_transactions_fromAccountId` ON `${TABLE_NAME}` (`fromAccountId`)"
          },
          {
            "name": "index_recurring_transactions_toAccountId",
            "unique": false,
            "columnNames": [
              "toAccountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_recurring_transactions_toAccountId` ON `${TABLE_NAME}` (`toAccountId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "categories",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "fromAccountId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "accounts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "toAccountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "family_members",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `avatarUri` TEXT, `role` INTEGER NOT NULL, `email` TEXT NOT NULL, `phone` TEXT NOT NULL, `uniqueId` TEXT, `status` INTEGER NOT NULL, `lastActiveTime` INTEGER, `note` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `isOwner` INTEGER NOT NULL, `canEditTransactions` INTEGER NOT NULL, `canViewAllTransactions` INTEGER NOT NULL, `spendingLimit` REAL NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatarUri",
            "columnName": "avatarUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "uniqueId",
            "columnName": "uniqueId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastActiveTime",
            "columnName": "lastActiveTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOwner",
            "columnName": "isOwner",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canEditTransactions",
            "columnName": "canEditTransactions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canViewAllTransactions",
            "columnName": "canViewAllTransactions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spendingLimit",
            "columnName": "spendingLimit",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "investments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `type` INTEGER NOT NULL, `initialAmount` REAL NOT NULL, `currentValue` REAL NOT NULL, `totalReturn` REAL NOT NULL, `accountId` INTEGER, `institution` TEXT, `productCode` TEXT, `expectedAnnualReturn` REAL, `actualAnnualReturn` REAL, `riskLevel` INTEGER, `startDate` INTEGER NOT NULL, `endDate` INTEGER, `status` INTEGER NOT NULL, `redemptionDate` INTEGER, `lastValueUpdateDate` INTEGER NOT NULL, `autoUpdateFrequencyDays` INTEGER, `note` TEXT, `attachmentsJson` TEXT, `transactionHistoryJson` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`accountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "initialAmount",
            "columnName": "initialAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentValue",
            "columnName": "currentValue",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalReturn",
            "columnName": "totalReturn",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "institution",
            "columnName": "institution",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "productCode",
            "columnName": "productCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "expectedAnnualReturn",
            "columnName": "expectedAnnualReturn",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "actualAnnualReturn",
            "columnName": "actualAnnualReturn",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "riskLevel",
            "columnName": "riskLevel",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "redemptionDate",
            "columnName": "redemptionDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastValueUpdateDate",
            "columnName": "lastValueUpdateDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "autoUpdateFrequencyDays",
            "columnName": "autoUpdateFrequencyDays",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attachmentsJson",
            "columnName": "attachmentsJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "transactionHistoryJson",
            "columnName": "transactionHistoryJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_investments_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_investments_accountId` ON `${TABLE_NAME}` (`accountId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "financial_reports",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT NOT NULL, `type` INTEGER NOT NULL, `startDate` INTEGER NOT NULL, `endDate` INTEGER NOT NULL, `generatedDate` INTEGER NOT NULL, `totalIncome` REAL NOT NULL, `totalExpense` REAL NOT NULL, `netCashflow` REAL NOT NULL, `savingRate` REAL, `initialTotalAssets` REAL, `finalTotalAssets` REAL, `assetGrowthRate` REAL, `reportDataJson` TEXT NOT NULL, `configJson` TEXT, `pdfUri` TEXT, `shareUrl` TEXT, `status` INTEGER NOT NULL, `note` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `includeIncomeAnalysis` INTEGER NOT NULL, `includeExpenseAnalysis` INTEGER NOT NULL, `includeCategoryBreakdown` INTEGER NOT NULL, `includeAccountBalances` INTEGER NOT NULL, `includeBudgetComparison` INTEGER NOT NULL, `includeFinancialHealth` INTEGER NOT NULL, `netIncome` REAL NOT NULL, `savingsRate` REAL NOT NULL, `incomeAnalysisJson` TEXT NOT NULL, `expenseAnalysisJson` TEXT NOT NULL, `accountBalancesJson` TEXT NOT NULL, `budgetComparisonJson` TEXT NOT NULL, `financialHealthJson` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "generatedDate",
            "columnName": "generatedDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalIncome",
            "columnName": "totalIncome",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalExpense",
            "columnName": "totalExpense",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "netCashflow",
            "columnName": "netCashflow",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "savingRate",
            "columnName": "savingRate",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "initialTotalAssets",
            "columnName": "initialTotalAssets",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "finalTotalAssets",
            "columnName": "finalTotalAssets",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "assetGrowthRate",
            "columnName": "assetGrowthRate",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "reportDataJson",
            "columnName": "reportDataJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "configJson",
            "columnName": "configJson",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pdfUri",
            "columnName": "pdfUri",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shareUrl",
            "columnName": "shareUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeIncomeAnalysis",
            "columnName": "includeIncomeAnalysis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeExpenseAnalysis",
            "columnName": "includeExpenseAnalysis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeCategoryBreakdown",
            "columnName": "includeCategoryBreakdown",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeAccountBalances",
            "columnName": "includeAccountBalances",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeBudgetComparison",
            "columnName": "includeBudgetComparison",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "includeFinancialHealth",
            "columnName": "includeFinancialHealth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "netIncome",
            "columnName": "netIncome",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "savingsRate",
            "columnName": "savingsRate",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "incomeAnalysisJson",
            "columnName": "incomeAnalysisJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expenseAnalysisJson",
            "columnName": "expenseAnalysisJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accountBalancesJson",
            "columnName": "accountBalancesJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "budgetComparisonJson",
            "columnName": "budgetComparisonJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "financialHealthJson",
            "columnName": "financialHealthJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "account_categories",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `icon` TEXT NOT NULL, `color` INTEGER NOT NULL, `sortOrder` INTEGER NOT NULL, `isDefault` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sortOrder",
            "columnName": "sortOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_account_categories_sortOrder",
            "unique": false,
            "columnNames": [
              "sortOrder"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_account_categories_sortOrder` ON `${TABLE_NAME}` (`sortOrder`)"
          },
          {
            "name": "index_account_categories_isDefault",
            "unique": false,
            "columnNames": [
              "isDefault"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_account_categories_isDefault` ON `${TABLE_NAME}` (`isDefault`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'f44cf46f351609fd488ee330a3458b81')"
    ]
  }
}